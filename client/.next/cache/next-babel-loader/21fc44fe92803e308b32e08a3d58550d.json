{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\react\\\\mca6\\\\aws_react\\\\client\\\\pages\\\\user\\\\link\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//imports\nimport { useState, useEffect } from 'react';\nimport Layout from '../../../components/Layout';\nimport axios from 'axios';\nimport withUser from '../../withUser';\nimport { getCookie, isAuth } from '../../../helpers/auth';\nimport { API } from '../../../config';\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\n\nconst Update = ({\n  oldLink,\n  token\n}) => {\n  _s();\n\n  // state\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    title: oldLink.title,\n    url: oldLink.url,\n    categories: oldLink.categories,\n    loadedCategories: [],\n    success: '',\n    error: '',\n    type: oldLink.type,\n    medium: oldLink.medium\n  });\n  const {\n    title,\n    url,\n    categories,\n    loadedCategories,\n    success,\n    error,\n    type,\n    medium\n  } = state; //load categories when component mounts using useEffect\n\n  useEffect(() => {\n    loadCategories();\n  }, [success]);\n\n  const loadCategories = async () => {\n    const response = await axios.get(`${API}/categories`);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      loadedCategories: response.data\n    }));\n  };\n\n  const handleTitleChange = e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      title: e.target.value,\n      error: '',\n      success: ''\n    }));\n  };\n\n  const handleURLChange = e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      url: e.target.value,\n      error: '',\n      success: ''\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    /*console.table({title, url, categories, type, medium});*/\n    // Link based on logged in user role\n\n    let dynamicUpdateUrl;\n\n    if (isAuth() && isAuth().role === 'admin') {\n      dynamicUpdateUrl = `${API}/link/admin/${oldLink._id}`;\n    } else {\n      dynamicUpdateUrl = `${API}/link/${oldLink._id}`;\n    }\n\n    try {\n      const response = await axios.put(dynamicUpdateUrl, {\n        title,\n        url,\n        categories,\n        type,\n        medium\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        success: 'Link is updated'\n      }));\n    } catch (error) {\n      console.log('LINK SUBMIT ERROR', error);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        error: error.response.data.error\n      }));\n    }\n  };\n\n  const handleTypeClick = e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      type: e.target.value,\n      success: '',\n      error: ''\n    }));\n  };\n\n  const handleMediumClick = e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      medium: e.target.value,\n      success: '',\n      error: ''\n    }));\n  };\n\n  const showMedium = () => __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-check ml-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleMediumClick,\n    checked: medium === 'video',\n    value: \"video\",\n    className: \"form-check-input\",\n    name: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }), \"Video\")), __jsx(\"div\", {\n    className: \"form-check ml-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleMediumClick,\n    checked: medium === 'ebook',\n    value: \"ebook\",\n    className: \"form-check-input\",\n    name: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }), \"Ebook\")));\n\n  const showTypes = () => __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-check ml-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleTypeClick,\n    checked: type === 'free',\n    value: \"free\",\n    className: \"form-check-input\",\n    name: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }), \"Free\")), __jsx(\"div\", {\n    className: \"form-check ml-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleTypeClick,\n    checked: type === 'paid',\n    value: \"paid\",\n    className: \"form-check-input\",\n    name: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }), \"Paid\")));\n\n  const handleToggle = c => () => {\n    // return the first index or -1\n    const clickedCategory = categories.indexOf(c);\n    const all = [...categories];\n\n    if (clickedCategory === -1) {\n      all.push(c);\n    } else {\n      all.splice(clickedCategory, 1);\n    }\n\n    console.log('all >> categories', all);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      categories: all,\n      success: '',\n      error: ''\n    }));\n  }; // show categories > checkbox\n\n\n  const showCategories = () => {\n    return loadedCategories && loadedCategories.map((c, i) => __jsx(\"li\", {\n      className: \"list-unstyled\",\n      key: c._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      checked: categories.includes(c._id),\n      onChange: handleToggle(c._id),\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }), __jsx(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, c.name)));\n  }; // link create form\n\n\n  const submitLinkForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, \"Title\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onChange: handleTitleChange,\n    value: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, \"URL\"), __jsx(\"input\", {\n    type: \"url\",\n    className: \"form-control\",\n    onChange: handleURLChange,\n    value: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    disabled: !token,\n    className: \"btn btn-outline-warning\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, isAuth() || token ? 'Update' : 'Login to update')));\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, \"Update Link/URL\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, \"Category\"), __jsx(\"ul\", {\n    style: {\n      maxHeight: '100px',\n      overflowY: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 29\n    }\n  }, showCategories())), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 29\n    }\n  }, \"Type\"), showTypes()), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 29\n    }\n  }, \"Medium\"), showMedium())), __jsx(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, success && showSuccessMessage(success), error && showErrorMessage(error), submitLinkForm())));\n};\n\n_s(Update, \"oQ7aXGRxwGr2pZbUWRxtKFYgdl8=\");\n\n_c = Update;\n\nUpdate.getInitialProps = async ({\n  req,\n  token,\n  query\n}) => {\n  const response = await axios.get(`${API}/link/${query.id}`);\n  return {\n    oldLink: response.data,\n    token\n  };\n};\n\nexport default _c2 = withUser(Update);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Update\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/react/mca6/aws_react/client/pages/user/link/[id].js"],"names":["useState","useEffect","Layout","axios","withUser","getCookie","isAuth","API","showSuccessMessage","showErrorMessage","Update","oldLink","token","state","setState","title","url","categories","loadedCategories","success","error","type","medium","loadCategories","response","get","data","handleTitleChange","e","target","value","handleURLChange","handleSubmit","preventDefault","dynamicUpdateUrl","role","_id","put","headers","Authorization","console","log","handleTypeClick","handleMediumClick","showMedium","showTypes","handleToggle","c","clickedCategory","indexOf","all","push","splice","showCategories","map","i","includes","name","submitLinkForm","maxHeight","overflowY","getInitialProps","req","query","id"],"mappings":"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","sourcesContent":["//imports\r\nimport { useState, useEffect } from 'react';\r\nimport Layout from '../../../components/Layout';\r\nimport axios from 'axios';\r\nimport withUser from '../../withUser';\r\nimport { getCookie, isAuth } from '../../../helpers/auth';\r\nimport { API } from '../../../config';\r\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\r\n\r\nconst Update = ({ oldLink, token }) => {\r\n    // state\r\n    const [state, setState] = useState({\r\n        title: oldLink.title,\r\n        url: oldLink.url,\r\n        categories: oldLink.categories,\r\n        loadedCategories: [],\r\n        success: '',\r\n        error: '',\r\n        type: oldLink.type,\r\n        medium: oldLink.medium\r\n    });\r\n    const {title, url, categories, loadedCategories, success, error, type, medium } = state;\r\n\r\n    //load categories when component mounts using useEffect\r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, [success]);\r\n\r\n    const loadCategories = async () => {\r\n        const response = await axios.get(`${API}/categories`);\r\n        setState({ ...state, loadedCategories: response.data });\r\n    };\r\n\r\n    const handleTitleChange = e => {\r\n        setState({...state, title: e.target.value, error: '', success: ''})\r\n    };\r\n\r\n    const handleURLChange = e => {\r\n        setState({...state, url: e.target.value, error: '', success: ''})\r\n    };\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        /*console.table({title, url, categories, type, medium});*/\r\n        // Link based on logged in user role\r\n\r\n        let dynamicUpdateUrl\r\n        if(isAuth() && isAuth().role === 'admin'){\r\n            dynamicUpdateUrl = `${API}/link/admin/${oldLink._id}`\r\n        }else {\r\n            dynamicUpdateUrl = `${API}/link/${oldLink._id}`\r\n        }\r\n\r\n        try {\r\n            const response = await axios.put(\r\n                 dynamicUpdateUrl,\r\n                 { title, url, categories, type, medium },\r\n                  {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                  }\r\n            );\r\n            setState({...state, success: 'Link is updated'})\r\n        }catch (error){\r\n           console.log('LINK SUBMIT ERROR',error); \r\n           setState({...state, error: error.response.data.error });\r\n        }\r\n    };\r\n\r\n    const handleTypeClick = e => {\r\n        setState({...state, type: e.target.value, success: '', error: ''});\r\n    };\r\n\r\n    const handleMediumClick = e => {\r\n        setState({...state, medium: e.target.value, success: '', error: ''});\r\n    };\r\n\r\n\r\n    const showMedium = () => (\r\n        <React.Fragment>\r\n            <div className=\"form-check ml-3\">\r\n                <label className=\"form-check-label\">\r\n                  <input \r\n                    type=\"radio\" \r\n                    onClick={handleMediumClick} \r\n                    checked={medium === 'video'} \r\n                    value=\"video\" \r\n                    className=\"form-check-input\" \r\n                    name=\"medium\"\r\n                  /> \r\n                   Video\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-check ml-3\">\r\n                <label className=\"form-check-label\">\r\n                  <input \r\n                    type=\"radio\" \r\n                    onClick={handleMediumClick} \r\n                    checked={medium === 'ebook'} \r\n                    value=\"ebook\" \r\n                    className=\"form-check-input\" \r\n                    name=\"medium\"\r\n                  /> \r\n                   Ebook\r\n                </label>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n\r\n    const showTypes = () => (\r\n        <React.Fragment>\r\n            <div className=\"form-check ml-3\">\r\n                <label className=\"form-check-label\">\r\n                  <input \r\n                    type=\"radio\" \r\n                    onClick={handleTypeClick} \r\n                    checked={type === 'free'} \r\n                    value=\"free\" \r\n                    className=\"form-check-input\" \r\n                    name=\"type\"\r\n                  /> \r\n                   Free\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-check ml-3\">\r\n                <label className=\"form-check-label\">\r\n                  <input \r\n                    type=\"radio\" \r\n                    onClick={handleTypeClick} \r\n                    checked={type === 'paid'} \r\n                    value=\"paid\" \r\n                    className=\"form-check-input\" \r\n                    name=\"type\"\r\n                  /> \r\n                   Paid\r\n                </label>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n\r\n\r\n    const handleToggle = c => () => {\r\n        // return the first index or -1\r\n        const clickedCategory = categories.indexOf(c)\r\n        const all = [...categories]\r\n\r\n        if(clickedCategory === -1) {\r\n            all.push(c)       \r\n        } else {\r\n            all.splice(clickedCategory, 1)\r\n        }\r\n\r\n        console.log('all >> categories', all)\r\n        setState({...state, categories: all, success: '', error: '' });\r\n    };\r\n\r\n    // show categories > checkbox\r\n    const showCategories = () => {\r\n        return (\r\n                loadedCategories && \r\n                loadedCategories.map((c, i) => (\r\n                <li className=\"list-unstyled\" key={c._id}>\r\n                    <input \r\n                        type=\"checkbox\" \r\n                        checked={categories.includes(c._id)} \r\n                        onChange={handleToggle(c._id)} \r\n                        className= \"mr-2\" \r\n                    />\r\n                    <label className=\"form-check-label\">{c.name}</label> \r\n                </li>\r\n            ))\r\n        );\r\n    };\r\n\r\n    // link create form\r\n    const submitLinkForm = () => (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Title</label>\r\n                <input type=\"text\" className=\"form-control\" onChange={handleTitleChange} value={title}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">URL</label>\r\n                <input type=\"url\" className=\"form-control\" onChange={handleURLChange} value={url}/>\r\n            </div>\r\n            <div>\r\n                <button disabled={!token} className=\"btn btn-outline-warning\" type=\"submit\">\r\n                    {isAuth() || token ? 'Update' : 'Login to update'}\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <h1>Update Link/URL</h1>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-muted ml-4\">Category</label>\r\n                            <ul style={{ maxHeight: '100px', overflowY: 'scroll' }}>{showCategories()}</ul>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-muted ml-4\">Type</label>\r\n                            {showTypes()}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-muted ml-4\">Medium</label>\r\n                            {showMedium()}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                    {success && showSuccessMessage(success)}\r\n                    {error && showErrorMessage(error)}\r\n                    {submitLinkForm()}</div>\r\n                </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nUpdate.getInitialProps = async ({ req, token, query }) => {\r\n  const response = await axios.get(`${API}/link/${query.id}`);\r\n  return { oldLink: response.data, token };\r\n};\r\n\r\nexport default withUser(Update);"]},"metadata":{},"sourceType":"module"}