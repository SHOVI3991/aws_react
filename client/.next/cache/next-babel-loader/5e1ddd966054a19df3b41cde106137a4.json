{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\react\\\\mca6\\\\aws_react\\\\client\\\\pages\\\\register.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../helpers/alerts';\nimport { API } from '../config';\nimport { isAuth } from '../helpers/auth';\nimport Router from 'next/Router';\n\nconst Register = () => {\n  _s();\n\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: '',\n    success: '',\n    buttonText: 'Register',\n    loadedCategories: [],\n    categories: []\n  });\n  const {\n    name,\n    email,\n    password,\n    error,\n    success,\n    buttonText\n  } = state;\n  useEffect(() => {\n    isAuth() && Router.push('/');\n  }, []);\n  useEffect(() => {\n    loadCategories();\n  }, []);\n\n  const loadCategories = async () => {\n    const response = await axios.get(`${API}/categories`);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      loadedCategories: response.data\n    }));\n  };\n\n  const handleToggle = c => () => {\n    // return the first index or -1\n    const clickedCategory = categories.indexOf(c);\n    const all = [...categories];\n\n    if (clickedCategory === -1) {\n      all.push(c);\n    } else {\n      all.splice(clickedCategory, 1);\n    }\n\n    console.log('all >> categories', all);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      categories: all,\n      success: '',\n      error: ''\n    }));\n  }; // show categories > checkbox\n\n\n  const showCategories = () => {\n    return loadedCategories && loadedCategories.map((c, i) => __jsx(\"li\", {\n      className: \"list-unstyled\",\n      key: c._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: handleToggle(c._id),\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }), __jsx(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, c.name)));\n  };\n\n  const handleChange = name => e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [name]: e.target.value,\n      error: '',\n      success: '',\n      buttonText: 'Register'\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      buttonText: 'Registering'\n    }));\n\n    try {\n      const response = await axios.post(`${API}/register`, {\n        name,\n        email,\n        password\n      });\n      console.log(response);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        name: '',\n        email: '',\n        password: '',\n        buttonText: 'Submitted',\n        success: response.data.message\n      }));\n    } catch (error) {\n      console.log(error);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        buttonText: 'Register',\n        error: error.response.data.error\n      }));\n    }\n  };\n  /*const handleSubmit = e => {\r\n      e.preventDefault();\r\n      setState({...state, buttonText: 'Registering'});\r\n      //console.table({ name, email, password });\r\n      axios\r\n      .post(`http://localhost:8000/api/register`,{\r\n          name,\r\n          email,\r\n          password\r\n      })\r\n      .then(response => {\r\n          console.log(response);\r\n          setState({\r\n              ...state,\r\n              name: '',\r\n              email: '',\r\n              password: '',\r\n              buttonText: 'Submitted',\r\n              success: response.data.message\r\n          })\r\n      })\r\n      .catch(error => {\r\n          console.log(error);\r\n          setState({...state, buttonText: 'Register', error: error.response.data.error})\r\n      });\r\n  }*/\n\n\n  const registerForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    value: name,\n    onChange: handleChange('name'),\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Type your name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    value: email,\n    onChange: handleChange('email'),\n    type: \"email\",\n    className: \"form-control\",\n    placeholder: \"Type your email-id\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    value: password,\n    onChange: handleChange('password'),\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Type your password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Category\"), __jsx(\"ul\", {\n    style: {\n      maxHeight: '100px',\n      overflowY: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, showCategories())), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-outline-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, buttonText)));\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, \"Register\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), registerForm()));\n};\n\n_s(Register, \"ZD9LO2EL9rKFTnCqzK8Hk4+xZDY=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/react/mca6/aws_react/client/pages/register.js"],"names":["useState","useEffect","Layout","axios","showSuccessMessage","showErrorMessage","API","isAuth","Router","Register","state","setState","name","email","password","error","success","buttonText","loadedCategories","categories","push","loadCategories","response","get","data","handleToggle","c","clickedCategory","indexOf","all","splice","console","log","showCategories","map","i","_id","handleChange","e","target","value","handleSubmit","preventDefault","post","message","registerForm","maxHeight","overflowY"],"mappings":";;;;;;;;;;;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,EAA4BC,gBAA5B,QAAmD,mBAAnD;AACA,SAAQC,GAAR,QAAkB,WAAlB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC;AAC/BY,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,QAAQ,EAAE,EAHqB;AAI/BC,IAAAA,KAAK,EAAE,EAJwB;AAK/BC,IAAAA,OAAO,EAAE,EALsB;AAM/BC,IAAAA,UAAU,EAAE,UANmB;AAO/BC,IAAAA,gBAAgB,EAAE,EAPa;AAQ/BC,IAAAA,UAAU,EAAE;AARmB,GAAD,CAAlC;AAWA,QAAM;AAACP,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA,KAAxB;AAA+BC,IAAAA,OAA/B;AAAwCC,IAAAA;AAAxC,MAAsDP,KAA5D;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,MAAM,MAAMC,MAAM,CAACY,IAAP,CAAY,GAAZ,CAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,cAAc,GAAG,YAAY;AAC/B,UAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,GAAEjB,GAAI,aAAjB,CAAvB;AACAK,IAAAA,QAAQ,iCAAMD,KAAN;AAAaQ,MAAAA,gBAAgB,EAAEI,QAAQ,CAACE;AAAxC,OAAR;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAGC,CAAC,IAAI,MAAM;AAC5B;AACA,UAAMC,eAAe,GAAGR,UAAU,CAACS,OAAX,CAAmBF,CAAnB,CAAxB;AACA,UAAMG,GAAG,GAAG,CAAC,GAAGV,UAAJ,CAAZ;;AAEA,QAAGQ,eAAe,KAAK,CAAC,CAAxB,EAA2B;AACvBE,MAAAA,GAAG,CAACT,IAAJ,CAASM,CAAT;AACH,KAFD,MAEO;AACHG,MAAAA,GAAG,CAACC,MAAJ,CAAWH,eAAX,EAA4B,CAA5B;AACH;;AAEDI,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,GAAjC;AACAlB,IAAAA,QAAQ,iCAAKD,KAAL;AAAYS,MAAAA,UAAU,EAAEU,GAAxB;AAA6Bb,MAAAA,OAAO,EAAE,EAAtC;AAA0CD,MAAAA,KAAK,EAAE;AAAjD,OAAR;AACH,GAbD,CA3BmB,CA0CnB;;;AACA,QAAMkB,cAAc,GAAG,MAAM;AACzB,WACQf,gBAAgB,IAChBA,gBAAgB,CAACgB,GAAjB,CAAqB,CAACR,CAAD,EAAIS,CAAJ,KACrB;AAAI,MAAA,SAAS,EAAC,eAAd;AAA8B,MAAA,GAAG,EAAET,CAAC,CAACU,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAEX,YAAY,CAACC,CAAC,CAACU,GAAH,CAA7C;AAAsD,MAAA,SAAS,EAAE,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCV,CAAC,CAACd,IAAvC,CAFJ,CADA,CAFR;AASH,GAVD;;AAcA,QAAMyB,YAAY,GAAGzB,IAAI,IAAI0B,CAAC,IAAI;AAC9B3B,IAAAA,QAAQ,iCAAKD,KAAL;AAAY,OAACE,IAAD,GAAQ0B,CAAC,CAACC,MAAF,CAASC,KAA7B;AAAoCzB,MAAAA,KAAK,EAAE,EAA3C;AAA+CC,MAAAA,OAAO,EAAE,EAAxD;AAA4DC,MAAAA,UAAU,EAAE;AAAxE,OAAR;AACH,GAFD;;AAIA,QAAMwB,YAAY,GAAG,MAAMH,CAAN,IAAW;AAC5BA,IAAAA,CAAC,CAACI,cAAF;AACA/B,IAAAA,QAAQ,iCAAKD,KAAL;AAAYO,MAAAA,UAAU,EAAE;AAAxB,OAAR;;AACA,QAAG;AACC,YAAMK,QAAQ,GAAG,MAAMnB,KAAK,CAACwC,IAAN,CAAY,GAAErC,GAAI,WAAlB,EAA8B;AACjDM,QAAAA,IADiD;AAEjDC,QAAAA,KAFiD;AAGjDC,QAAAA;AAHiD,OAA9B,CAAvB;AAKAiB,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACAX,MAAAA,QAAQ,iCACDD,KADC;AAEJE,QAAAA,IAAI,EAAE,EAFF;AAGJC,QAAAA,KAAK,EAAE,EAHH;AAIJC,QAAAA,QAAQ,EAAE,EAJN;AAKJG,QAAAA,UAAU,EAAE,WALR;AAMJD,QAAAA,OAAO,EAAEM,QAAQ,CAACE,IAAT,CAAcoB;AANnB,SAAR;AASH,KAhBD,CAgBC,OAAM7B,KAAN,EAAa;AACVgB,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACAJ,MAAAA,QAAQ,iCAAKD,KAAL;AAAYO,QAAAA,UAAU,EAAE,UAAxB;AAAoCF,QAAAA,KAAK,EAAEA,KAAK,CAACO,QAAN,CAAeE,IAAf,CAAoBT;AAA/D,SAAR;AACH;AACJ,GAvBD;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,QAAM8B,YAAY,GAAG,MACrB;AAAM,IAAA,QAAQ,EAAEJ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,KAAK,EAAE7B,IADX;AAEI,IAAA,QAAQ,EAAEyB,YAAY,CAAC,MAAD,CAF1B;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,SAAS,EAAC,cAJd;AAKI,IAAA,WAAW,EAAC,gBALhB;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAYI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,KAAK,EAAExB,KADX;AAEI,IAAA,QAAQ,EAAEwB,YAAY,CAAC,OAAD,CAF1B;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,SAAS,EAAC,cAJd;AAKI,IAAA,WAAW,EAAC,oBALhB;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAZJ,EAuBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,KAAK,EAAEvB,QADX;AAEI,IAAA,QAAQ,EAAEuB,YAAY,CAAC,UAAD,CAF1B;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,SAAS,EAAC,cAJd;AAKI,IAAA,WAAW,EAAC,oBALhB;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAvBJ,EAkCI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAI,IAAA,KAAK,EAAE;AAAES,MAAAA,SAAS,EAAE,OAAb;AAAsBC,MAAAA,SAAS,EAAE;AAAjC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyDd,cAAc,EAAvE,CAFJ,CAlCJ,EAuCI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6ChB,UAA7C,CADJ,CAvCJ,CADA;;AA6CA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAIKD,OAAO,IAAIZ,kBAAkB,CAACY,OAAD,CAJlC,EAKKD,KAAK,IAAIV,gBAAgB,CAACU,KAAD,CAL9B,EAMK8B,YAAY,EANjB,CADJ,CADJ;AAaH,CA3KD;;GAAMpC,Q;;KAAAA,Q;AA6KN,eAAeA,QAAf","sourcesContent":["import {useState, useEffect} from 'react';\r\nimport Layout from '../components/Layout';\r\nimport axios from 'axios';\r\nimport {showSuccessMessage, showErrorMessage} from '../helpers/alerts';\r\nimport {API} from '../config';\r\nimport {isAuth} from '../helpers/auth';\r\nimport Router from 'next/Router';\r\n\r\nconst Register = () => {\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        success: '',\r\n        buttonText: 'Register',\r\n        loadedCategories: [], \r\n        categories: []\r\n    }); \r\n\r\n    const {name, email, password, error, success, buttonText} = state;\r\n\r\n    useEffect(() => {\r\n        isAuth() && Router.push('/');\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const loadCategories = async () => {\r\n        const response = await axios.get(`${API}/categories`);\r\n        setState({ ...state, loadedCategories: response.data });\r\n    };\r\n\r\n    const handleToggle = c => () => {\r\n        // return the first index or -1\r\n        const clickedCategory = categories.indexOf(c)\r\n        const all = [...categories]\r\n\r\n        if(clickedCategory === -1) {\r\n            all.push(c)       \r\n        } else {\r\n            all.splice(clickedCategory, 1)\r\n        }\r\n\r\n        console.log('all >> categories', all)\r\n        setState({...state, categories: all, success: '', error: '' });\r\n    };\r\n\r\n    // show categories > checkbox\r\n    const showCategories = () => {\r\n        return (\r\n                loadedCategories && \r\n                loadedCategories.map((c, i) => (\r\n                <li className=\"list-unstyled\" key={c._id}>\r\n                    <input type=\"checkbox\" onChange={handleToggle(c._id)} className= \"mr-2\" />\r\n                    <label className=\"form-check-label\">{c.name}</label> \r\n                </li>\r\n            ))\r\n        );\r\n    };\r\n\r\n    \r\n\r\n    const handleChange = name => e => {\r\n        setState({...state, [name]: e.target.value, error: '', success: '', buttonText: 'Register' })\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        setState({...state, buttonText: 'Registering'});\r\n        try{\r\n            const response = await axios.post(`${API}/register`, {\r\n                name,\r\n                email,\r\n                password\r\n            })\r\n            console.log(response);\r\n            setState({\r\n                ...state,\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                buttonText: 'Submitted',\r\n                success: response.data.message\r\n            });\r\n\r\n        }catch(error) {\r\n            console.log(error);\r\n            setState({...state, buttonText: 'Register', error: error.response.data.error});\r\n        }\r\n    }    \r\n\r\n    /*const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setState({...state, buttonText: 'Registering'});\r\n        //console.table({ name, email, password });\r\n        axios\r\n        .post(`http://localhost:8000/api/register`,{\r\n            name,\r\n            email,\r\n            password\r\n        })\r\n        .then(response => {\r\n            console.log(response);\r\n            setState({\r\n                ...state,\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                buttonText: 'Submitted',\r\n                success: response.data.message\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            setState({...state, buttonText: 'Register', error: error.response.data.error})\r\n        });\r\n    }*/\r\n\r\n    const registerForm = () => \r\n    <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n            <input \r\n                value={name}\r\n                onChange={handleChange('name')} \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                placeholder=\"Type your name\" \r\n                required\r\n            />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <input \r\n                value={email}\r\n                onChange={handleChange('email')} \r\n                type=\"email\" \r\n                className=\"form-control\" \r\n                placeholder=\"Type your email-id\"\r\n                required \r\n            />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <input \r\n                value={password}\r\n                onChange={handleChange('password')} \r\n                type=\"password\" \r\n                className=\"form-control\" \r\n                placeholder=\"Type your password\" \r\n                required\r\n            />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label className=\"text-muted ml-4\">Category</label>\r\n            <ul style={{ maxHeight: '100px', overflowY: 'scroll' }}>{showCategories()}</ul>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <button className=\"btn btn-outline-warning\">{buttonText}</button>\r\n        </div>\r\n    </form>;\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"col-md-6 offset-md-3\">\r\n\r\n                <h1>Register</h1>\r\n                <br />\r\n                {success && showSuccessMessage(success)}\r\n                {error && showErrorMessage(error)}\r\n                {registerForm()}\r\n\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}