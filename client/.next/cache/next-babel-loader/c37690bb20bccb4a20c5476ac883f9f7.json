{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\mca6\\\\aws_react\\\\client\\\\pages\\\\admin\\\\category\\\\create.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Resizer from 'react-image-file-resizer';\nimport { API } from '../../../config';\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\nimport Layout from '../../../components/layout';\nimport withAdmin from '../../withAdmin';\n\nconst Create = ({\n  user,\n  token\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    name: '',\n    content: '',\n    error: '',\n    success: '',\n    buttonText: 'Create',\n    imageUploadText: 'Upload image',\n    image: ''\n  });\n  const {\n    name,\n    content,\n    success,\n    error,\n    image,\n    buttonText,\n    imageUploadText\n  } = state;\n\n  const handleChange = name => e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [name]: e.target.value,\n      error: '',\n      success: '',\n      imageUploadText: imageName\n    }));\n  };\n\n  const handleImage = event => {\n    let fileInput = false;\n\n    if (event.target.files[0]) {\n      fileInput = true;\n    }\n\n    if (fileInput) {\n      Resizer.imageFileResizer(event.target.files[0], 300, 300, 'JPEG', 100, 0, uri => {\n        console.log(uri);\n      }, 'base64');\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      buttonText: 'Creating'\n    })); // console.log(...formData);\n\n    try {\n      const response = await axios.post(`${API}/category`, formData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('CATEGORY CREATE RESPONSE', response);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        name: '',\n        content: '',\n        formData: '',\n        buttonText: 'Created',\n        imageUploadText: 'Uploaded image',\n        success: `${response.data.name} is created`\n      }));\n    } catch (error) {\n      console.log('CATEGORY CREATE ERROR', error);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        name: '',\n        buttonText: 'Error creating',\n        error: error.response.data.error\n      }));\n    }\n  };\n\n  const createCategoryForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    onChange: handleChange('name'),\n    value: name,\n    type: \"text\",\n    className: \"form-control\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Content\"), __jsx(\"textarea\", {\n    onChange: handleChange('content'),\n    value: content,\n    className: \"form-control\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"btn btn-outline-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, imageUploadText, __jsx(\"input\", {\n    onChange: handleImage,\n    type: \"file\",\n    accept: \"image/*\",\n    className: \"form-control\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-outline-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, buttonText)));\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col=md-5 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, \"Create category\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), createCategoryForm())));\n};\n\nexport default withAdmin(Create);","map":{"version":3,"sources":["D:/react/mca6/aws_react/client/pages/admin/category/create.js"],"names":["useState","useEffect","axios","Resizer","API","showSuccessMessage","showErrorMessage","Layout","withAdmin","Create","user","token","state","setState","name","content","error","success","buttonText","imageUploadText","image","handleChange","e","target","value","imageName","handleImage","event","fileInput","files","imageFileResizer","uri","console","log","handleSubmit","preventDefault","response","post","formData","headers","Authorization","data","createCategoryForm"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport {API} from '../../../config';\r\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\r\nimport Layout from '../../../components/layout';\r\nimport withAdmin from '../../withAdmin';\r\n\r\nconst Create = ({user, token}) => {\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        content: '',\r\n        error: '',\r\n        success: '',\r\n        buttonText: 'Create',\r\n        imageUploadText: 'Upload image',\r\n        image: ''\r\n    });\r\n\r\n    const {name, content, success, error, image, buttonText, imageUploadText} = state;\r\n\r\n    const handleChange = name => e => {\r\n        setState({ ...state, [name]: e.target.value, error: '', success: '', imageUploadText: imageName})\r\n    };\r\n\r\n    const handleImage = (event) => {\r\n        let fileInput = false;\r\n        if(event.target.files[0]) {\r\n            fileInput = true;\r\n        }\r\n        if(fileInput) {\r\n            Resizer.imageFileResizer(\r\n                event.target.files[0],\r\n                300,\r\n                300,\r\n                'JPEG',\r\n                100,\r\n                0,\r\n                uri => {\r\n                    console.log(uri);\r\n                },\r\n                'base64'\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        setState({...state, buttonText: 'Creating'});\r\n        // console.log(...formData);\r\n        try {\r\n            const response = await axios.post(\r\n                `${API}/category`, \r\n                formData, \r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                }\r\n            );\r\n            console.log('CATEGORY CREATE RESPONSE', response);\r\n            setState({\r\n                ...state,\r\n                name: '',\r\n                content: '',\r\n                formData: '',\r\n                buttonText: 'Created',\r\n                imageUploadText: 'Uploaded image',\r\n                success: `${response.data.name} is created`\r\n            });\r\n        } catch(error) {\r\n            console.log('CATEGORY CREATE ERROR', error);\r\n            setState({ \r\n                ...state,\r\n                name: '',\r\n                buttonText: 'Error creating',\r\n                error: error.response.data.error \r\n            });\r\n        }\r\n    };\r\n\r\n    const createCategoryForm = () => (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} value={name} type='text' className=\"form-control\" required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Content</label>\r\n                <textarea onChange={handleChange('content')} value={content} className=\"form-control\" required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-outline-secondary\">\r\n                    {imageUploadText}\r\n                    <input \r\n                        onChange={handleImage} \r\n                        type=\"file\" \r\n                        accept=\"image/*\" \r\n                        className=\"form-control\" \r\n                        hidden \r\n                    />\r\n\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn btn-outline-warning\">\r\n                    {buttonText}            \r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"row\">\r\n                <div className=\"col=md-5 offset-md-3\">\r\n                    <h1>Create category</h1>\r\n                    <br />\r\n                    {success && showSuccessMessage(success)}\r\n                    {error && showErrorMessage(error)}\r\n                    {createCategoryForm()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default withAdmin(Create);"]},"metadata":{},"sourceType":"module"}